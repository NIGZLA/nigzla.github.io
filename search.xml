<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis</title>
      <link href="/blog/2024/05/27/Java/"/>
      <url>/blog/2024/05/27/Java/</url>
      
        <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><ol><li>什么是Java中的多态性（Polymorphism）？</li><li>Java的异常处理机制以及try-catch-finally块的作用。</li><li>什么是Java中的线程（Thread）？Java中线程的生命周期吗？</li><li>你了解Java中的反射（Reflection）吗？反射的主要用途是什么？</li></ol><p>面试Java开发岗位时，通常需要掌握以下技术栈：</p><ol><li><strong>Java核心技术</strong>：熟练掌握Java语言的基本语法、面向对象编程（OOP）、异常处理、集合框架等基础知识。</li><li><strong>数据库</strong>：熟悉关系型数据库（如MySQL、Oracle、PostgreSQL）以及至少一种NoSQL数据库（如MongoDB、Redis）的使用和基本操作，能够编写SQL语句进行数据操作，了解数据库设计和优化。</li><li><strong>Spring框架</strong>：掌握Spring框架的核心模块，包括Spring Core、Spring MVC、Spring Boot等，能够使用Spring进行项目的依赖注入、AOP编程、事务管理等。</li><li><strong>Spring Boot</strong>：熟悉Spring Boot框架，能够快速搭建和开发基于Spring Boot的应用程序，并了解Spring Boot的自动配置、起步依赖等特性。</li><li><strong>ORM框架</strong>：熟悉至少一种ORM（Object-Relational Mapping）框架，如Hibernate、MyBatis等，能够使用ORM框架简化数据库操作，提高开发效率。</li><li><strong>Web开发</strong>：了解HTTP协议、Servlet规范，熟悉常用的Web开发技术，如HTML、CSS、JavaScript，以及常用 的前端框架如Angular、React、Vue等。</li><li><strong>微服务架构</strong>：了解微服务架构的概念和原理，熟悉Spring Cloud等微服务框架，能够构建和部署基于微服务的分布式系统。</li><li><strong>版本控制工具</strong>：熟练使用版本控制工具如Git，能够进行代码的版本管理和团队协作。</li><li><strong>测试</strong>：熟悉单元测试、集成测试、端到端测试等各种测试方法，掌握JUnit等测试框架的使用。</li><li><strong>容器化技术</strong>：了解Docker、Kubernetes等容器化技术，能够使用容器化技术进行应用的部署和管理。</li><li><strong>消息队列</strong>：了解消息队列的概念和常见的消息中间件，如RabbitMQ、Kafka等，能够使用消息队列实现异步消息处理。</li><li><strong>安全</strong>：了解常见的Web安全问题，如跨站脚本攻击（XSS）、SQL注入等，能够进行安全意识培训和代码安全审查。</li></ol><p>面试Java运维岗位时，通常需要掌握以下技术栈：</p><ol><li><p><strong>操作系统</strong>：熟悉Linux系统的基本操作和常用命令，包括文件管理、进程管理、用户权限管理等。</p></li><li><p><strong>网络和安全</strong>：了解网络原理和常见网络协议，熟悉TCP&#x2F;IP协议栈，能够进行网络故障排查和调优。同时需要了解网络安全基础知识，包括防火墙、安全策略、SSL&#x2F;TLS等。</p></li><li><p><strong>容器化技术</strong>：熟悉Docker和Kubernetes等容器化技术，能够使用容器部署和管理应用程序，实现快速部署和扩展。</p></li><li><p><strong>自动化运维工具</strong>：熟练使用自动化运维工具，如Ansible、Puppet、Chef等，能够进行系统配置管理、软件部署和任务自动化。</p></li><li><p><strong>监控和日志</strong>：掌握监控系统的搭建和配置，熟悉常用监控工具如Prometheus、Grafana等，能够监控系统性能和应用运行状态。同时需要熟悉日志管理，包括日志收集、存储和分析等。</p></li><li><p><strong>云平台</strong>：了解常见的云计算平台，如AWS、Azure、阿里云等，能够在云平台上部署和管理Java应用程序。</p></li><li><p><strong>数据库管理</strong>：熟悉关系型数据库和NoSQL数据库的安装、配置和优化，能够进行数据库备份、恢复和性能调优。</p></li><li><p><strong>故障排查和性能调优</strong>：具备故障排查和性能调优的能力，能够快速定位和解决系统故障和性能瓶颈。</p></li><li><p><strong>持续集成和持续部署</strong>：了解持续集成和持续部署的流程和工具，能够搭建和管理持续集成和持续部署的环境。</p></li><li><p><strong>安全和备份</strong>：了解系统安全的基本原理和常见攻击手法，能够进行安全漏洞扫描和修复。同时需要具备数据备份和恢复的能力，确保数据的安全性和可靠性。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis</title>
      <link href="/blog/2024/05/27/Mybatis/"/>
      <url>/blog/2024/05/27/Mybatis/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h1><h2 id="一-什么是Mybatis？"><a href="#一-什么是Mybatis？" class="headerlink" title="一.什么是Mybatis？"></a>一.什么是Mybatis？</h2><ol><li>Mybatis是一款优秀的<code>持久层</code> <code>框架</code>，用于简化JDBC开发</li><li>Mybatis本是Apache的开源项目iBatis。2013年11月迁移到Github</li><li>官网:<a href="https://mybatis.org/mybatis-3/ja/index.html">https://mybatis.org/mybatis-3/ja/index.html</a></li></ol><ul><li><h4 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h4><ul><li>负责将数据保存到数据库的代码</li><li>JavaEE三层架构:表现层，业务层，<code>持久层</code>：数据持久化</li></ul></li><li><h4 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h4><ul><li>半成品软件，是一套可重用的，通用的，软件基础代码模型</li><li>在框架的基础上构建软件编写更加高效，规范，通用，可扩展</li></ul></li><li><p>为什么要简化JDBC</p></li><li><p><img src="https://nigzla.github.io//blog/2024/05/27/Mybatis/image-20240327224631428.png" alt="image-20240327224631428"></p></li><li><p>JDBC缺点</p><ul><li><p>硬编码</p><ul><li>注册驱动 获取连接 SQL语句</li></ul></li><li><p>操作繁琐</p><ul><li>手动设置参数 手动封装结果集</li></ul></li></ul></li><li><p>Mybatis把注册驱动等一系列硬编码功能添加到配置文件<code>mybattis-config.xml</code>中</p></li></ul><p><img src="https://nigzla.github.io//blog/2024/05/27/Mybatis/image-20240328162832867.png" alt="image-20240328162832867"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="/blog/2024/05/26/hello-test/"/>
      <url>/blog/2024/05/26/hello-test/</url>
      
        <content type="html"><![CDATA[<p>test</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel基本数学函数</title>
      <link href="/blog/2024/05/26/excel/"/>
      <url>/blog/2024/05/26/excel/</url>
      
        <content type="html"><![CDATA[<h3 id="Excel基本数学函数"><a href="#Excel基本数学函数" class="headerlink" title="Excel基本数学函数"></a>Excel基本数学函数</h3><ol><li><p><strong>SUM</strong>：求和</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">SUM</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 到 A5 分别为 1, 2, 3, 4, 5，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure></li><li><p><strong>AVERAGE</strong>：平均值</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">AVERAGE</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 到 A5 分别为 1, 2, 3, 4, 5，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></li><li><p><strong>MIN</strong>：最小值</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MIN</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 到 A5 分别为 1, 2, 3, 4, 5，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></li><li><p><strong>MAX</strong>：最大值</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MAX</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 到 A5 分别为 1, 2, 3, 4, 5，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></li><li><p><strong>COUNT</strong>：计数</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">COUNT</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 到 A5 分别为 1, 2, 3, 4, 5，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></li></ol><h3 id="逻辑函数"><a href="#逻辑函数" class="headerlink" title="逻辑函数"></a>逻辑函数</h3><ol><li><p><strong>IF</strong>：条件判断</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">IF</span>(<span class="symbol">A1</span> &gt; <span class="number">10</span>, <span class="string">&quot;大于10&quot;</span>, <span class="string">&quot;小于等于10&quot;</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 15，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大于10</span><br></pre></td></tr></table></figure></li><li><p><strong>AND</strong>：逻辑与</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">AND</span>(<span class="symbol">A1</span> &gt; <span class="number">10</span>, <span class="symbol">B1</span> &lt; <span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 15，B1 为 18，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUE</span><br></pre></td></tr></table></figure></li><li><p><strong>OR</strong>：逻辑或</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">OR</span>(<span class="symbol">A1</span> &gt; <span class="number">10</span>, <span class="symbol">B1</span> &lt; <span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 8，B1 为 18，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUE</span><br></pre></td></tr></table></figure></li><li><p><strong>NOT</strong>：逻辑非</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">NOT</span>(<span class="symbol">A1</span> &gt; <span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 8，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUE</span><br></pre></td></tr></table></figure></li></ol><h3 id="查找与引用函数"><a href="#查找与引用函数" class="headerlink" title="查找与引用函数"></a>查找与引用函数</h3><ol><li><p><strong>VLOOKUP</strong>：垂直查找</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">VLOOKUP</span>(<span class="symbol">B1</span>, <span class="symbol">A1</span>:<span class="symbol">C10</span>, <span class="number">3</span>, <span class="built_in">FALSE</span>)</span><br></pre></td></tr></table></figure><p>假设 B1 为 2，A1:C10 为以下数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1   A   X</span><br><span class="line">2   B   Y</span><br><span class="line">3   C   Z</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Y</span><br></pre></td></tr></table></figure></li><li><p><strong>HLOOKUP</strong>：水平查找</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">HLOOKUP</span>(<span class="symbol">B1</span>, <span class="symbol">A1</span>:<span class="symbol">F3</span>, <span class="number">2</span>, <span class="built_in">FALSE</span>)</span><br></pre></td></tr></table></figure><p>假设 B1 为 2，A1:F3 为以下数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1   2   3   4   5   6</span><br><span class="line">A   B   C   D   E   F</span><br><span class="line">X   Y   Z   W   V   U</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B</span><br></pre></td></tr></table></figure></li><li><p><strong>INDEX</strong>：索引</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">INDEX</span>(<span class="symbol">A1</span>:<span class="symbol">C3</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>假设 A1:C3 为以下数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1   2   3</span><br><span class="line">4   5   6</span><br><span class="line">7   8   9</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure></li><li><p><strong>MATCH</strong>：匹配</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MATCH</span>(<span class="symbol">B1</span>, <span class="symbol">A1</span>:<span class="symbol">A5</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>假设 B1 为 3，A1:A5 为 1, 2, 3, 4, 5，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></li><li><p><strong>OFFSET</strong>：偏移</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">OFFSET</span>(<span class="symbol">A1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1:B3 为以下数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1   2</span><br><span class="line">3   4</span><br><span class="line">5   6</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure></li></ol><h3 id="文本函数"><a href="#文本函数" class="headerlink" title="文本函数"></a>文本函数</h3><ol><li><p><strong>CONCATENATE</strong>：连接文本</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">CONCATENATE</span>(<span class="symbol">A1</span>, <span class="symbol">B1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello” ，B1 为 “World”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HelloWorld</span><br></pre></td></tr></table></figure></li><li><p><strong>CONCAT</strong>：连接文本</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">CONCAT</span>(<span class="symbol">A1</span>, <span class="symbol">B1</span>, <span class="symbol">C1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello”，B1 为 “ “, C1 为 “World”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure></li><li><p><strong>TEXTJOIN</strong>：连接文本并使用分隔符</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">TEXTJOIN</span>(<span class="string">&quot;, &quot;</span>, <span class="built_in">TRUE</span>, <span class="symbol">A1</span>:<span class="symbol">C1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello”，B1 为 “World”，C1 为 “!”, 结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello, World, !</span><br></pre></td></tr></table></figure></li><li><p><strong>LEFT</strong>：左侧文本提取</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">LEFT</span>(<span class="symbol">A1</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hel</span><br></pre></td></tr></table></figure></li><li><p><strong>RIGHT</strong>：右侧文本提取</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">RIGHT</span>(<span class="symbol">A1</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">llo</span><br></pre></td></tr></table></figure></li><li><p><strong>MID</strong>：中间文本提取</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MID</span>(<span class="symbol">A1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ell</span><br></pre></td></tr></table></figure></li><li><p><strong>LEN</strong>：文本长度</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">LEN</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></li><li><p><strong>TRIM</strong>：去除多余空格</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">TRIM</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “ Hello World “，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure></li></ol><h3 id="日期与时间函数"><a href="#日期与时间函数" class="headerlink" title="日期与时间函数"></a>日期与时间函数</h3><ol><li><p><strong>TODAY</strong>：当前日期</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">TODAY</span>()</span><br></pre></td></tr></table></figure><p>假设今天是 2024 年 5 月 23 日，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024-05-23</span><br></pre></td></tr></table></figure></li><li><p><strong>NOW</strong>：当前日期和时间</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">NOW</span>()</span><br></pre></td></tr></table></figure><p>假设当前时间为 2024 年 5 月 23 日 14:30，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024-05-23 14:30</span><br></pre></td></tr></table></figure></li><li><p><strong>DATE</strong>：日期</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">DATE</span>(<span class="number">2024</span>, <span class="number">5</span>, <span class="number">23</span>)</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024-05-23</span><br></pre></td></tr></table></figure></li><li><p><strong>YEAR</strong>：年份</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">YEAR</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “2024-05-23”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024</span><br></pre></td></tr></table></figure></li><li><p><strong>MONTH</strong>：月份</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MONTH</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “2024-05-23”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></li><li><p><strong>DAY</strong>：日期</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">DAY</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “2024-05-23”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure></li></ol><h3 id="财务函数"><a href="#财务函数" class="headerlink" title="财务函数"></a>财务函数</h3><ol><li><p><strong>PMT</strong>：计算贷款的每期付款金额</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">PMT</span>(<span class="number">0.05</span>/<span class="number">12</span>, <span class="number">60</span>, -<span class="number">10000</span>)</span><br></pre></td></tr></table></figure><p>假设年利率为 5%，分 60 期（5 年），贷款总额为 10000 元，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">188.71</span><br></pre></td></tr></table></figure></li><li><p><strong>FV</strong>：计算未来值</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">FV</span>(<span class="number">0.05</span>/<span class="number">12</span>, <span class="number">60</span>, -<span class="number">188.71</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>假设每月存入 188.71 元，年利率 5%，分 60 期，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10000</span><br></pre></td></tr></table></figure></li></ol><h3 id="统计函数"><a href="#统计函数" class="headerlink" title="统计函数"></a>统计函数</h3><ol><li><p><strong>MEDIAN</strong>：中位数</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MEDIAN</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 到 A5 分别为 1, 2, 3, 4, 5，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></li><li><p><strong>MODE</strong>：众数</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MODE</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 到 A5 分别为 1, 2</p></li></ol><p>, 2, 3, 4，结果为：<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><ol start="3"><li><strong>STDEV</strong>：标准差<figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">STDEV</span>(<span class="symbol">A1</span>:<span class="symbol">A5</span>)</span><br></pre></td></tr></table></figure>假设 A1 到 A5 分别为 1, 2, 3, 4, 5，结果为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.58</span><br></pre></td></tr></table></figure></li></ol><h3 id="信息函数"><a href="#信息函数" class="headerlink" title="信息函数"></a>信息函数</h3><ol><li><p><strong>ISNUMBER</strong>：判断是否为数字</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">ISNUMBER</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 123，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUE</span><br></pre></td></tr></table></figure></li><li><p><strong>ISBLANK</strong>：判断是否为空</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">ISBLANK</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为空单元格，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUE</span><br></pre></td></tr></table></figure></li><li><p><strong>ISTEXT</strong>：判断是否为文本</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">ISTEXT</span>(<span class="symbol">A1</span>)</span><br></pre></td></tr></table></figure><p>假设 A1 为 “Hello”，结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUE</span><br></pre></td></tr></table></figure></li></ol><p>这些示例展示了每个函数和公式在 Excel 中的实际应用及其结果。通过这些示例，你可以更好地理解如何使用这些函数来处理各种数据。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios网络请求</title>
      <link href="/blog/2024/05/26/Axios%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/"/>
      <url>/blog/2024/05/26/Axios%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="Axios网络请求"><a href="#Axios网络请求" class="headerlink" title="Axios网络请求"></a>Axios网络请求</h1><p>Axios 是一个基于 <em><a href="https://javascript.info/promise-basics">promise</a></em> 网络请求库，作用于<a href="https://nodejs.org/"><code>node.js</code></a> 和浏览器中。 它是 <em><a href="https://www.lullabot.com/articles/what-is-an-isomorphic-application">isomorphic</a></em> 的(即同一套代码可以运行在浏览器和node.js中)。在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p><h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><ul><li>从浏览器创建 <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest">XMLHttpRequests</a></li><li>从 node.js 创建 <a href="http://nodejs.org/api/http.html">http</a> 请求</li><li>支持 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a> API</li><li>拦截请求和响应</li><li>转换请求和响应数据</li><li>取消请求</li><li>超时处理</li><li>查询参数序列化支持嵌套项处理</li><li>自动将请求体序列化为：<ul><li>JSON (<code>application/json</code>)</li><li>Multipart &#x2F; FormData (<code>multipart/form-data</code>)</li><li>URL encoded form (<code>application/x-www-form-urlencoded</code>)</li></ul></li><li>将 HTML Form 转换成 JSON 进行请求</li><li>自动转换JSON数据</li><li>获取浏览器和 node.js 的请求进度，并提供额外的信息（速度、剩余时间）</li><li>为 node.js 设置带宽限制</li><li>兼容符合规范的 FormData 和 Blob（包括 node.js）</li><li>客户端支持防御<a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">XSRF</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>使用 npm:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><h1 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h1><h3 id="为什么会出现跨域问题？"><a href="#为什么会出现跨域问题？" class="headerlink" title="为什么会出现跨域问题？"></a>为什么会出现跨域问题？</h3><ul><li>为了保证浏览器的安全，不同源的客户端脚本在没有明确授权的情况下，不能读写对方资源，称为同源策略，同源策略是浏览器安全的基石</li><li>同源策略(Sameoriginpolicy)是一种约定，它是浏览器最核心也最基本的安全功能</li><li>所谓同源(即指在同一个域)就是两个页面具有相同的协议(protocol)，主机(host)和端口号(port)</li><li>当一个请求url的协议、域名、端口三者之间任意一个与当前页面ur!不同即为跨域，，此时无法读取非同源网页的 Cookie，无法向非同源地址发送 AJAX 请求</li></ul><h3 id="怎么解决跨域问题？"><a href="#怎么解决跨域问题？" class="headerlink" title="怎么解决跨域问题？"></a>怎么解决跨域问题？</h3><ul><li>跨源资源共享(CrossSource Resource共享)是由W3C制定的一种跨域资源共享技术标准，其目的就是为了解决前端的跨域请求。</li><li>CORS可以在不破坏即有规则的情况下，通过后端服务器实现CORS接口，从而实现跨域通信。</li><li>科拉斯将请求分为两类:<code>简单请求</code>和<code>非简单请求</code>，分别对跨域通信提供了支持。</li></ul><h4 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h4><p>满足以下条件的请求即为简单请求:</p><ul><li>请求方法:GET、POST、HEAD</li><li>除了以下的请求头字段之外，没有自定义的请求头:<br>Accept、Accept-Language、Content-Language、Last-Event-lD.Content-Type</li><li>Content-Type的值只有以下三种:<br>text&#x2F;plain、multipart&#x2F;form-data、 application&#x2F;x-www-form-urlencoded</li></ul><h4 id="简单请求的服务器处理"><a href="#简单请求的服务器处理" class="headerlink" title="简单请求的服务器处理"></a>简单请求的服务器处理</h4><ul><li><p>对于简单请求，CORS的策略是请求时在请求头中增加一个Origin字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host:localhost:<span class="number">8080</span></span><br><span class="line">Origin:http:<span class="comment">//localhost:8081</span></span><br><span class="line">Referer:http:<span class="comment">//localhost:8081/index.html</span></span><br></pre></td></tr></table></figure></li><li><p>服务器收到请求后，根据该字段判断是否允许该请求访问，如果允许，则在HTTP头信息中添加Access-Control-Alow-Origin字段。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-0rigin:http:<span class="comment">//localhost:8081</span></span><br><span class="line">Content-Length:<span class="number">20</span></span><br><span class="line">Content-Type:text/plain;charset=UTF-<span class="number">8</span></span><br><span class="line">Date:Thu,<span class="number">12</span> Jul2018 <span class="number">12</span>:<span class="number">51</span>:<span class="number">14</span> GMT</span><br></pre></td></tr></table></figure></li></ul><h4 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h4><ul><li><p>对于非简单请求的跨源请求，浏览器会在真实请求发出前增加一次OPTION请求，称为预检请求(preflight request)</p></li><li><p>预检请求将真实请求的信息，包括请求方法、自定义头字段、源信息添加到HTTP头信息字段中，询问服务器是否允许这样的操作。</p></li><li><p>例如一个GET请求:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS /test HTTP/<span class="number">1.1</span></span><br><span class="line">Origin:http:<span class="comment">//www.test.com</span></span><br><span class="line">Access-Control-Request-Method:GET</span><br><span class="line">Access-Control-Request-Headers:X-Custom-Header</span><br><span class="line">Host:www.test.com</span><br></pre></td></tr></table></figure></li><li><p>Access-Control-Request-Method表示请求使用的HTTP方法，Access-Control-Request-Headers包含请求的自定义头字段</p></li></ul><h4 id="在Spring-Boot中配置CORS"><a href="#在Spring-Boot中配置CORS" class="headerlink" title="在Spring Boot中配置CORS"></a>在Spring Boot中配置CORS</h4><p>后端可<code>加个@CrossOrigin注解</code>对单个Controller进行放行</p><p>在传统的Java EE开发中，可以通过过滤器统一配置，而Spring Boot中对此则提供了更加简洁的解决方案</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)  <span class="comment">// 允许跨域访问的路径</span></span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)  <span class="comment">// 允许跨域访问的源</span></span><br><span class="line">                .allowedMethods(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>, <span class="string">&quot;DELETE&quot;</span>)  <span class="comment">// 允许请求方法</span></span><br><span class="line">                .maxAge(<span class="number">168000</span>)  <span class="comment">// 预检间隔时间</span></span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>)  <span class="comment">// 允许头部设置</span></span><br><span class="line">                .allowCredentials(<span class="literal">true</span>);  <span class="comment">// 是否发送cookie</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="前端接受后端请求"><a href="#前端接受后端请求" class="headerlink" title="前端接受后端请求"></a>前端接受后端请求</h4><p>在前端代码中，有众多功能需要访问后端代码，若对每个代码都进行单独设置会十分繁琐<br>所以可以通过axios进行整合</p><h4 id="与Vue整合"><a href="#与Vue整合" class="headerlink" title="与Vue整合"></a>与Vue整合</h4><ul><li><p>在实际项目开发中，几乎每个组件中都会用到 axios发起数据请求。此时会遇到如下两个问题:</p></li><li><p>每个组件中都需要导入 axios</p></li><li><p>每次发请求都需要填写完整的请求路径</p></li><li><p>可以通过全局配置的方式解决上述问题:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置请求根路径</span></span><br><span class="line">axios .<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&#x27;http://api.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//将axios作为全局的自定义属性，每个组件可以在内部直接访问(Vue3)</span></span><br><span class="line"><span class="string">app.config.globalProperties.$http=axios</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//将axios作为全局的自定义属性，每个组件可以在内部直接访问(Vue2)</span></span><br><span class="line"><span class="string">Vue.prototype.$http=axios</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://nigzla.github.io//blog/2024/05/26/Axios%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/Axios.png" alt="Axios"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&quot;http://localhost:9091&quot;</span><span class="comment">//这是示例，需要根据自己端口号进行更改</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$http</span> = axios;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">&#x27;/brands&#x27;</span>)<span class="comment">//用$http代替</span></span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">tableData</span> = response.<span class="property">data</span>;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
